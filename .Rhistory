shape = params_[,1],
rate = params_[,2])
y_hat <- na.omit(y_hat)
y_hat_dummy <-rgamma(length(params_),
shape = as.numeric(fit.gamma$estimate[c("shape")])
, rate= as.numeric(fit.gamma$estimate["rate"]))
mean(y_hat)
mean(y_hat_dummy)
boxplot(y_hat)
boxplot(y_hat_dummy)
boxplot(y_hat)
boxplot(y_hat_dummy)
max(y_hat)
mean(y_hat>10.0)
mean(y_hat>5.0)
plot(density(y_hat))
aic <-c(fit.weibull$aic,
fit.norm$aic,
fit.gamma$aic,
fit.lnorm$aic)
names(aic) <- c('weibull','norm','gamma','lnorm')
aic
aic_df
fit.gamma$estimate
fit.gamma$estimate
plot(mod_sim)
mod = jags.model(textConnection(mod_string),
data = data_jags,
inits = inits,
n.adapt = 1e3,
n.chains = 3)
mod_sim <-coda.samples(model = mod,
variable.names = params,
n.iter =1e5)
plot(mod_sim)
plot(mod_sim)
mod_string <- "model {
#Likelihood
for(i in 1:n) {
y[i] ~ dgamma(alpha,beta)
}
#Prior
alpha ~ dnorm(a_mu,1.0/sig_sq)
beta ~ dnorm(b_mu, 1.0/sig_sq)
}"
#Set up the model
set.seed(50)
n = nrow(vola)
data_jags <- list(y=vola$lvol,
n=n,
a_mu=as.numeric(fit.gamma$estimate[c("shape")]),
b_mu = as.numeric(fit.gamma$estimate[c("rate")]),
sig_sq = 1.0
)
params <- c("alpha","beta")
inits <- function() {
alpha_init = as.numeric(fit.gamma$estimate[c("shape")])
beta_inits = as.numeric(fit.gamma$estimate[c("rate")])
inits <- list("alpha" = alpha_init,
"beta" =beta_inits )
}
mod = jags.model(textConnection(mod_string),
data = data_jags,
inits = inits,
n.adapt = 1e3,
n.chains = 3)
mod_sim <-coda.samples(model = mod,
variable.names = params,
n.iter =1e5)
plot(mod_sim)
autocorr.plot(mod_sim)
autocorr.diag(mod_sim)
gelman.diag(mod_sim)
gelman.diag(mod_sim)
autocorr.plot(mod_sim)
mod_csim  <- as.mcmc(do.call(rbind,mod_sim))
params_ <- do.call(rbind,mod_sim)
y_hat <- rgamma(length(params_),
shape = params_[,1],
rate = params_[,2])
y_hat <- na.omit(y_hat)
y_hat_dummy <-rgamma(length(params_),
shape = as.numeric(fit.gamma$estimate[c("shape")])
, rate= as.numeric(fit.gamma$estimate["rate"]))
mean(y_hat)
mean(y_hat_dummy)
boxplot(y_hat)
par(mar=c(1,1,1,1))
boxplot(y_hat)
boxplot(y_hat)
n = nrow(vola)
data_jags <- list(y=vola$lvol,
n=n,
a_mu=as.numeric(fit.gamma$estimate[c("shape")]),
b_mu = as.numeric(fit.gamma$estimate[c("rate")]),
sig_sq = 0.5
)
params <- c("alpha","beta")
inits <- function() {
alpha_init = as.numeric(fit.gamma$estimate[c("shape")])
beta_inits = as.numeric(fit.gamma$estimate[c("rate")])
inits <- list("alpha" = alpha_init,
"beta" =beta_inits )
}
mod = jags.model(textConnection(mod_string),
data = data_jags,
inits = inits,
n.adapt = 1e3,
n.chains = 3)
mod_sim <-coda.samples(model = mod,
variable.names = params,
n.iter =1e5)
plot(mod_sim)
summary(mod_sim)
gelman.diag(mod_sim)
autocorr.plot(mod_sim)
mod_csim  <- as.mcmc(do.call(rbind,mod_sim))
params_ <- do.call(rbind,mod_sim)
y_hat <- rgamma(length(params_),
shape = params_[,1],
rate = params_[,2])
y_hat <- na.omit(y_hat)
y_hat_dummy <-rgamma(length(params_),
shape = as.numeric(fit.gamma$estimate[c("shape")])
, rate= as.numeric(fit.gamma$estimate["rate"]))
mean(y_hat)
mean(y_hat_dummy)
boxplot(y_hat)
data_jags <- list(y=vola$lvol,
n=n,
a_mu=as.numeric(fit.gamma$estimate[c("shape")]),
b_mu = as.numeric(fit.gamma$estimate[c("rate")]),
sig_sq = 0.25
)
params <- c("alpha","beta")
inits <- function() {
alpha_init = as.numeric(fit.gamma$estimate[c("shape")])
beta_inits = as.numeric(fit.gamma$estimate[c("rate")])
inits <- list("alpha" = alpha_init,
"beta" =beta_inits )
}
mod = jags.model(textConnection(mod_string),
data = data_jags,
inits = inits,
n.adapt = 1e3,
n.chains = 3)
mod_sim <-coda.samples(model = mod,
variable.names = params,
n.iter =1e5)
plot(mod_sim)
summary(mod_sim)
gelman.diag(mod_sim)
autocorr.plot(mod_sim)
mod_csim  <- as.mcmc(do.call(rbind,mod_sim))
params_ <- do.call(rbind,mod_sim)
y_hat <- rgamma(length(params_),
shape = params_[,1],
rate = params_[,2])
y_hat <- na.omit(y_hat)
y_hat_dummy <-rgamma(length(params_),
shape = as.numeric(fit.gamma$estimate[c("shape")])
, rate= as.numeric(fit.gamma$estimate["rate"]))
mean(y_hat)
mean(y_hat_dummy)
boxplot(y_hat)
boxplot(y_hat)
boxplot(y_hat)
n = nrow(vola)
data_jags <- list(y=vola$lvol,
n=n,
a_mu=as.numeric(fit.gamma$estimate[c("shape")]),
b_mu = as.numeric(fit.gamma$estimate[c("rate")]),
sig_sq = 0.125
)
params <- c("alpha","beta")
inits <- function() {
alpha_init = as.numeric(fit.gamma$estimate[c("shape")])
beta_inits = as.numeric(fit.gamma$estimate[c("rate")])
inits <- list("alpha" = alpha_init,
"beta" =beta_inits )
}
mod = jags.model(textConnection(mod_string),
data = data_jags,
inits = inits,
n.adapt = 1e3,
n.chains = 3)
mod_sim <-coda.samples(model = mod,
variable.names = params,
n.iter =1e5)
#plot(mod_sim)
summary(mod_sim)
gelman.diag(mod_sim)
#autocorr.plot(mod_sim)
autocorr.diag(mod_sim)
effectiveSize(mod_sim)
mod_csim  <- as.mcmc(do.call(rbind,mod_sim))
params_ <- do.call(rbind,mod_sim)
y_hat <- rgamma(length(params_),
shape = params_[,1],
rate = params_[,2])
y_hat <- na.omit(y_hat)
y_hat_dummy <-rgamma(length(params_),
shape = as.numeric(fit.gamma$estimate[c("shape")])
, rate= as.numeric(fit.gamma$estimate["rate"]))
mean(y_hat)
mean(y_hat_dummy)
boxplot(y_hat)
mean(y_hat)
mean(y_hat>10)
vola
summa <-  dat %>%
group_by(monthyear) %>%
summarise(mean=mean(vola),sd=sd(vola))
summa
n = nrow(summa)
data_jags <- list(y=summa$sd,
n=n,
a_mu=as.numeric(fit.gamma$estimate[c("shape")]),
b_mu = as.numeric(fit.gamma$estimate[c("rate")]),
sig_sq = 1.1
)
params <- c("alpha","beta")
inits <- function() {
alpha_init = as.numeric(fit.gamma$estimate[c("shape")])
beta_inits = as.numeric(fit.gamma$estimate[c("rate")])
inits <- list("alpha" = alpha_init,
"beta" =beta_inits )
}
mod = jags.model(textConnection(mod_string),
data = data_jags,
inits = inits,
n.adapt = 1e3,
n.chains = 3)
mod_sim <-coda.samples(model = mod,
variable.names = params,
n.iter =1e5)
#plot(mod_sim)
summary(mod_sim)
gelman.diag(mod_sim)
#autocorr.plot(mod_sim)
autocorr.diag(mod_sim)
effectiveSize(mod_sim)
mod_csim  <- as.mcmc(do.call(rbind,mod_sim))
params_ <- do.call(rbind,mod_sim)
y_hat <- rgamma(length(params_),
shape = params_[,1],
rate = params_[,2])
y_hat <- na.omit(y_hat)
y_hat_dummy <-rgamma(length(params_),
shape = as.numeric(fit.gamma$estimate[c("shape")])
, rate= as.numeric(fit.gamma$estimate["rate"]))
mean(y_hat)
mean(y_hat_dummy)
boxplot(y_hat)
boxplot(y_hat*100)
data_jags <- list(y=summa$sd,
n=n,
a_mu=as.numeric(fit.gamma$estimate[c("shape")]),
b_mu = as.numeric(fit.gamma$estimate[c("rate")]),
sig_sq = 0.5
)
params <- c("alpha","beta")
inits <- function() {
alpha_init = as.numeric(fit.gamma$estimate[c("shape")])
beta_inits = as.numeric(fit.gamma$estimate[c("rate")])
inits <- list("alpha" = alpha_init,
"beta" =beta_inits )
}
mod = jags.model(textConnection(mod_string),
data = data_jags,
inits = inits,
n.adapt = 1e2,
n.chains = 3)
mod_sim <-coda.samples(model = mod,
variable.names = params,
n.iter =1e4)
#plot(mod_sim)
summary(mod_sim)
gelman.diag(mod_sim)
#autocorr.plot(mod_sim)
autocorr.diag(mod_sim)
effectiveSize(mod_sim)
mod_csim  <- as.mcmc(do.call(rbind,mod_sim))
params_ <- do.call(rbind,mod_sim)
y_hat <- rgamma(length(params_),
shape = params_[,1],
rate = params_[,2])
y_hat <- na.omit(y_hat)
y_hat_dummy <-rgamma(length(params_),
shape = as.numeric(fit.gamma$estimate["shape"])
, rate= as.numeric(fit.gamma$estimate["rate"]))
mean(y_hat)
mean(y_hat_dummy)
boxplot(y_hat*100)
mean(y_hat>5.0)
mean(y_hat>5.0)
mean(y_hat>0.05)
mean(y_hat>0.10)
VolaModel <- function(sig_sq=1.0) {
mod_string <- "model {
#Likelihood
for(i in 1:n) {
y[i] ~ dgamma(alpha,beta)
}
#Prior
alpha ~ dnorm(a_mu,1.0/sig_sq)
beta ~ dnorm(b_mu, 1.0/sig_sq)
}"
#Set up the model
set.seed(50)
n = nrow(summa)
data_jags <- list(y=summa$sd,
n=n,
a_mu=as.numeric(fit.gamma$estimate[c("shape")]),
b_mu = as.numeric(fit.gamma$estimate[c("rate")]),
sig_sq = 0.5
)
params <- c("alpha","beta")
inits <- function() {
alpha_init = as.numeric(fit.gamma$estimate[c("shape")])
beta_inits = as.numeric(fit.gamma$estimate[c("rate")])
inits <- list("alpha" = alpha_init,
"beta" =beta_inits )
}
mod = jags.model(textConnection(mod_string),
data = data_jags,
inits = inits,
n.adapt = 1e2,
n.chains = 3)
mod_sim <-coda.samples(model = mod,
variable.names = params,
n.iter =1e4)
#Post processing
#plot(mod_sim)
summary(mod_sim)
gelman.diag(mod_sim)
#autocorr.plot(mod_sim)
autocorr.diag(mod_sim)
effectiveSize(mod_sim)
mod_csim  <- as.mcmc(do.call(rbind,mod_sim))
params_ <- do.call(rbind,mod_sim)
y_hat <- rgamma(length(params_),
shape = params_[,1],
rate = params_[,2])
y_hat <- na.omit(y_hat)
y_hat_dummy <-rgamma(length(params_),
shape = as.numeric(fit.gamma$estimate["shape"])
, rate= as.numeric(fit.gamma$estimate["rate"]))
return(y_hat)
}
y_hat <-VolaModel(sig_sq = 1.0)
return(y_hat)
VolaModel <- function(sig_sq=1.0) {
mod_string <- "model {
#Likelihood
for(i in 1:n) {
y[i] ~ dgamma(alpha,beta)
}
#Prior
alpha ~ dnorm(a_mu,1.0/sig_sq)
beta ~ dnorm(b_mu, 1.0/sig_sq)
}"
#Set up the model
set.seed(50)
n = nrow(summa)
data_jags <- list(y=summa$sd,
n=n,
a_mu=as.numeric(fit.gamma$estimate[c("shape")]),
b_mu = as.numeric(fit.gamma$estimate[c("rate")]),
sig_sq = 0.5
)
params <- c("alpha","beta")
inits <- function() {
alpha_init = as.numeric(fit.gamma$estimate[c("shape")])
beta_inits = as.numeric(fit.gamma$estimate[c("rate")])
inits <- list("alpha" = alpha_init,
"beta" =beta_inits )
}
mod = jags.model(textConnection(mod_string),
data = data_jags,
inits = inits,
n.adapt = 1e2,
n.chains = 3)
mod_sim <-coda.samples(model = mod,
variable.names = params,
n.iter =1e4)
#Post processing
#plot(mod_sim)
print(summary(mod_sim))
print(gelman.diag(mod_sim))
#autocorr.plot(mod_sim)
print(autocorr.diag(mod_sim))
effectiveSize(mod_sim)
mod_csim  <- as.mcmc(do.call(rbind,mod_sim))
params_ <- do.call(rbind,mod_sim)
y_hat <- rgamma(length(params_),
shape = params_[,1],
rate = params_[,2])
y_hat <- na.omit(y_hat)
y_hat_dummy <-rgamma(length(params_),
shape = as.numeric(fit.gamma$estimate["shape"])
, rate= as.numeric(fit.gamma$estimate["rate"]))
return(y_hat)
}
y_hat <-VolaModel(sig_sq = 1.0)
mean(y_hat)
mean(y_hat>0.10)
y_hat <-VolaModel(sig_sq = 1.0)
mean(y_hat)
boxplot(y_hat*100)
par(mar=c(1,1,1,1))
boxplot(y_hat*100)
boxplot(y_hat*100)
mean(y_hat)
mean(summa$sd)
empirical_distribution <- summa$sd
mean(empirical_distribution)
mean(empirical_distribution)
library(dplyr)
source('Model_Vola_Monthly.R')
source('C:/pjt/QuantFin-Volatility/RunMonthlyVolaModel.R')
library(dplyr)
source('DistributionFitting.R')
source('Model_Vola_Monthly.R')
source('C:/pjt/QuantFin-Volatility/RunMonthlyVolaModel.R')
source('DistributionFitting.R')
getwd()
setwd('C:/pjt/QuantFin-Volatility')
library(dplyr)
source('DistributionFitting.R')
source('Model_Vola_Monthly.R')
dat = read.csv("c:/data/Datasets/stockprices/AAPL.csv",
header=TRUE)
head(dat)
str(dat)
dat$day <-format(as.Date(dat$timestamp),'%d')
dat$month <- as.numeric(format(as.Date(dat$timestamp),'%m'))
dat$year <-format(as.Date(dat$timestamp),'%y')
dat$year <- as.numeric(dat$year)*100
dat$monthyear <-dat$month + dat$year
dat$vola <- (dat$close - dat$open) /dat$open
summa <-  dat %>%
group_by(monthyear) %>%
summarise(mean=mean(vola),sd=sd(vola))
#Plot a histogram of volatility distribution
x <- summa$sd * 100
h<-hist(x, breaks=80, col="red", xlab="Volatility, %",
main="Apple Monthy Volatility"
,xlim = c(0.0,9.5)
#        ,ylim = c(0.0,200.0)
,freq = FALSE)
xfit<-seq(min(x),max(x),length=100)
yfit<-dnorm(xfit,mean=mean(x),sd=sd(x))
#yfit <- yfit*diff(h$mids[1:2])*length(x)
lines(xfit, yfit, col="blue", lwd=2)
d <- density(summa$sd)
plot(d)
empirical_distribution <- summa$sd
mean(empirical_distribution)
fit_statistics <-FitDistribution(x=empirical_distribution)
str(fit_statistics)
fit_statistics$fit_object
fit_statistics$fit_object.gamma
str(fit_statistics)
source('DistributionFitting.R')
source('DistributionFitting.R')
fit_statistics <-FitDistribution(x=empirical_distribution)
str(fit_statistics)
plot(fit_statistics$plotdesc)
fit_statistics$plotdesc
str(fit_statistics)
plot(fit_statistics$plotdesc)
source('C:/pjt/QuantFin-Volatility/RunMonthlyVolaModel.R')
source('DistributionFitting.R')
fit_statistics <-FitDistribution(x=empirical_distribution)
source('DistributionFitting.R')
fit_statistics <-FitDistribution(x=empirical_distribution)
source('C:/pjt/QuantFin-Volatility/RunMonthlyVolaModel.R')
source('DistributionFitting.R')
fit_statistics <-FitDistribution(x=empirical_distribution)
source('DistributionFitting.R')
fit_statistics <-FitDistribution(x=empirical_distribution)
fit_statistics <-FitDistribution(x=empirical_distribution)
source('DistributionFitting.R')
fit_statistics <-FitDistribution(x=empirical_distribution)
source('DistributionFitting.R')
fit_statistics <-FitDistribution(x=empirical_distribution)
source('DistributionFitting.R')
fit_statistics <-FitDistribution(x=empirical_distribution)
str(fit_statistics)
fit_statistics$gamma$aic
fit_statistics$gamma
fit_statistics$fit$gamma$aic
fit_statistics$fit$norm$aic
source('C:/pjt/QuantFin-Volatility/RunMonthlyVolaModel.R')
source('C:/pjt/QuantFin-Volatility/RunMonthlyVolaModel.R')
source('C:/pjt/QuantFin-Volatility/RunMonthlyVolaModel.R')
source('C:/pjt/QuantFin-Volatility/RunMonthlyVolaModel.R')
source('C:/pjt/QuantFin-Volatility/RunMonthlyVolaModel.R', echo=TRUE)
source('C:/pjt/QuantFin-Volatility/RunMonthlyVolaModel.R')
source('C:/pjt/QuantFin-Volatility/RunMonthlyVolaModel.R', echo=TRUE)
source('C:/pjt/QuantFin-Volatility/RunMonthlyVolaModel.R')
source('C:/pjt/QuantFin-Volatility/RunMonthlyVolaModel.R', echo=TRUE)
par(mar=c(1,1,1,1))
source('C:/pjt/QuantFin-Volatility/RunMonthlyVolaModel.R', echo=TRUE)
source('C:/pjt/QuantFin-Volatility/RunMonthlyVolaModel.R')
source('C:/pjt/QuantFin-Volatility/RunMonthlyVolaModel.R')
source('C:/pjt/QuantFin-Volatility/RunMonthlyVolaModel.R')
source('C:/pjt/QuantFin-Volatility/RunMonthlyVolaModel.R')
source('C:/pjt/QuantFin-Volatility/RunMonthlyVolaModel.R')
source('C:/pjt/QuantFin-Volatility/RunMonthlyVolaModel.R')
source('C:/pjt/QuantFin-Volatility/RunMonthlyVolaModel.R')
